server.port=8080
server.servlet.context-path=/project-archetype

mybatis.mapperLocations=classpath:mybatis/mappers/*.xml
# mybatis 是否开启全局二级缓存
mybatis.configuration.cache-enabled=false 

spring.datasource.url=jdbc:mysql://192.168.2.201:3306/wr1ttenyu?useUnicode=true&characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=p@ssword
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# Redis数据库索引（默认为0）TODO REDIS 数据库索引的作用
spring.redis.database=0
spring.redis.host=122.51.219.124
spring.redis.port=6379
spring.redis.password=A@awr1ttenyu
spring.redis.timeout=PT1000S

#consumer
kafka.consumers.main.bootstrap-servers=192.168.2.201:9092
kafka.consumers.main.group-id=wr1ttenyu 
kafka.consumers.main.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
kafka.consumers.main.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#是否开启自动提交
kafka.consumers.main.enable-auto-commit=true
#自动提交时间间隔
kafka.consumers.main.auto-commit-interval=1000
#消费者offset重置策略 latest 每次重新连接后 从上次消费的地方接着消费
kafka.consumers.main.auto-offset-reset=earliest
#fetch时最小拉取的字节数
kafka.consumers.main.fetch-min-size=1
#每次拉取的最大记录条数
kafka.consumers.main.max-poll-records=1000

#logging.level.wr1ttenyu.f1nal.study.project.archetype.dao.UUserMapper=debug